syntax = "proto3";

package appmicmeccproductcc.v1.ccdescriptionsservice.responses;

import "amiga/grpc/validation/validation.proto";
import "google/protobuf/wrappers.proto";

option java_package = "com.inditex.mecc.mecprcc.api.grpc.v1.ccDescriptionsService.responses";
option java_outer_classname = "GetDescriptionsResponseProto";

// Request to upsert CC descriptions
message GetDescriptionsResponse {
  // The CC identifier
  google.protobuf.Int64Value cc_id = 1 [(amiga.grpc.validation.mandatory) = true];
  // Commercial component's description
  Descriptions descriptions = 2 [(amiga.grpc.validation.mandatory) = true];
  // List of exceptions per store
  repeated StoreExceptions exceptions = 3;
}

message StoreExceptions {
  // The store identifier or empty if generic descriptions
  google.protobuf.Int64Value store_id = 1 [(amiga.grpc.validation.mandatory) = true];
  // Commercial component's description
  Descriptions descriptions = 2 [(amiga.grpc.validation.mandatory) = true];
}

// Message that wraps the map with all texts per locale ISO code
message Descriptions {
  // List of different texts indexed by locale ISO code (i.e: es-ES)
  map<string, CCTexts> cc_texts = 1;
}

message CCTexts {
  //Short name of the commercial component
  google.protobuf.StringValue name = 1 [(amiga.grpc.validation.mandatory) = true];
  //Short description of the commercial component
  google.protobuf.StringValue short_description = 2 [(amiga.grpc.validation.mandatory) = true];
  //Long description of the commercial component
  google.protobuf.StringValue long_description = 3 [(amiga.grpc.validation.mandatory) = true];
  //Additional description of the commercial component
  google.protobuf.StringValue additional_description = 4 [(amiga.grpc.validation.mandatory) = true];
}
